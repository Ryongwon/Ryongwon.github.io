{"meta":{"title":"龙渊","subtitle":"","description":"龙渊blog","author":"Ryongwon","url":"http://example.com","root":"/"},"pages":[{"title":"我的朋友们","date":"2023-10-24T07:08:36.707Z","updated":"2023-10-24T07:08:36.707Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"斗强圣者竟然在我身边！神集排名不分先后","text":"斗强圣者竟然在我身边！神集排名不分先后 “学数分放松”sarlren神！ “这也不是很难吧”纯真神！ “站在你面前的是 AI rank1！”折木太郎神！ “软工之神在此 谁敢造次！”Jungle神！ “一气化三清 信通任我行”Mccrena神！ “扼杀过去的我”violet神！ “绩点原神高手”ntdzyy神！ “hacker未来之星”水果神！ “我跌”heye神！真的很神😭 “后端开发 但是软工大手子”九日神！ “摇滚现充树莓文青 老婆位”雾雨神！","author":"ryongwon"},{"title":"","date":"2023-11-16T11:52:15.235Z","updated":"2023-11-16T11:52:15.235Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"#人类 #BUPT #信通 #22级 #自动化所 2023.11- 中科院自动化所客座学生 没回消息就是死了"},{"title":"所有标签","date":"2022-11-07T06:45:26.643Z","updated":"2022-11-07T06:45:26.643Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2022-11-07T06:45:10.038Z","updated":"2022-11-07T06:45:10.038Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"数据结构与算法笔记","slug":"dsc","date":"2023-03-09T09:09:26.000Z","updated":"2023-03-22T16:16:09.474Z","comments":true,"path":"2023/03/09/dsc/","link":"","permalink":"http://example.com/2023/03/09/dsc/","excerpt":"教学视频是清华大学邓俊辉数据结构与算法浙江大学数据结构 陈越注意：信通院的计算机基础只有数据结构与算法导论 并非数据结构与算法 注意甄别在学习前 确保熟练掌握C/C++、Python、Java等某一主流语言使用或学习能力该笔记以C++为例才不是只学了C++结合徐雅静老师主编的《数据结构与算法》与邓俊辉老师主编的《数据结构》","text":"教学视频是清华大学邓俊辉数据结构与算法浙江大学数据结构 陈越注意：信通院的计算机基础只有数据结构与算法导论 并非数据结构与算法 注意甄别在学习前 确保熟练掌握C/C++、Python、Java等某一主流语言使用或学习能力该笔记以C++为例才不是只学了C++结合徐雅静老师主编的《数据结构与算法》与邓俊辉老师主编的《数据结构》 前言：为什么要学习数据结构和算法？引用runoob的一句话 随着应用程序变得越来越复杂和数据越来越丰富，几百万、几十亿甚至几百亿的数据就会出现，而对这么大对数据进行搜索、插入或者排序等的操作就越来越慢，数据结构就是用来解决这些问题的。 想象一所图书馆，无数的新书（数据）入馆，如何合理摆放（数据存储），同时需要和旧书（旧数据）一起陈列（优化数据结构），读者（计算机、用户）如何更快更方便的查找需要的书籍。老破旧损的书籍怎么处理。将它抽象化，就是数据结构和算法这门课程所教的知识。 但其实我觉得学校排的课有点不太合理，我个人更喜欢先学数据结构再去实践C语言编程。不过按刘老师的意思大概是先去知道这玩意操作起来是什么效果再去理解背后的原理。whatever，这门课程多又杂，笔记纯属是辅助我个人理解的，如有错误，请务必指出！！谢谢！！ 鸽了一阵 今天补一下 零、导论4节2.2 静态单链表1 一、绪论概念引入数据是信息的载体，能够被计算机识别、存储和加工处理。分为数值数据与非数值型数据。 数据元素是数据的基本单位。 数据项（字段、域）是构成数据元素的不可分割的最小单位。每个数据元素可以包含多个不同的数据项，每个数据项具有独立的含义。 数据类型是具有相同性质的计算机数据的集合以及在这个数据集合上的一组操作。数据类型可以分为简单类型(或称为原子类型)和构造类型（或称为结构类型）。例如C++中int、float、double等。 数据结构是指按照某种逻辑关系组织起来的一组数据,按一定的存储方式存储在计算机的存储器中，并在这些数据上定义了一组运算的集合。其中，数据结构包含以下三个方面： 数据元素之间的逻辑关系,也称为数据的逻辑结构。 数据元素及其关系在计算机存储器内的存储形式,称为数据的存储结构或物理结构。 对数据的操作或运算。 解释说明：数据元素存储在数据域中，数据类型是给数据分类，数据结构是阐释数据是如何摆放查找的的。 常见的逻辑结构有4 种，分别是集合、线性结构、树和图。 通过计算模型按照某种算法规律的进行过程称为计算 邓给出这样一个例子：欧几里得的尺规作图将线段三等分 过A作任意射线ρ，在ρ上取一点D，用圆规取AC’=C’D’=D’B’，连接B’B，过D’、C’作BB’的平行线，交AB于点C、D。此时AC=CD=DB。 将该过程描述成算法形式，即： 12345678tripartition(AB)输入：线段AB输出：将AB三等分的两个点C和D从A发出一条与AB不重合的射线ρ任取上三点C'、D'和B'，使|AC'| = |C'D'| = |D'B'|连接B'B过D'做B'B的平行线，交AB于D过C'做B'B的平行线，交AB于C 个人理解这个过程为 线段→尺规作图→三等分点。而尺规作图这个环节就是计算机计算的过程。作图步骤与规则即为算法。 在此给出算法定义：算法是指基于特定的计算模型，旨在解决某一信息处理问题而设计的一个指令序列。 算法具有 输入/输出 正确性 确定性 可行性 有穷性 其中有穷性是判别程序与算法的重要性质 算法的评价：正确（符合语法 支持简单、大量、一般性、合法的输入） 鲁棒（对非法输入辨别处理） 可读（结构化 注释） 效率（快 好） 例：冒泡算法（邓数据结构） 1234567891011121314void bubblesort1A(int A[], int n) { //冒泡排序算法：0 ≤ nbool sorted = false; //整体排序标志，首先假定尚未排序 while (!sorted) { //在尚未确定已全局排序之前，逐趟进行扫描交换 sorted = true; //假定已经排序 for (int i = 1; i &lt; n; i++) { //自左向右逐对检查当前范围A[0, n)内的各相邻元素 if (A[i - 1] &gt; A[i]) { //一旦A[i - 1]与A[i]逆序，则 swap(A[i - 1], A[i]); //交换 sorted = false; //因整体排序不能保证，需要清除排序标志 } } n--; //至此末元素必然就位，故可以缩短待排序序列的有效长度 }} //借助布尔型标志位sorted，可及时提前退出，而不致总是蛮力地做n - 1趟扫描交换 最好时间复杂度：T(n)=Ω(g(n))//增速下界最坏时间复杂度：T(n)=O(f(n))//增速上界平均时间复杂度：T(n)=Σnp//数学期望 一般来说最坏已经够用了 三种情况无太大差别 复杂度计算；多种算法同时使用时 复杂度取最大值即多种算法嵌套使用时 复杂度计算乘积即for循环时间复杂度等于循环次数乘以循环体代码复杂度即 i*o(f(n))if-else结构复杂度取决于 判断条件、分支的复杂度的最大值即 空间复杂度；程序运行时占用内存的大小S(n)=O(f(n)) 一、线性表定义：由同类型数据元素构成有序序列的线性结构/一类形似只需要换数或字符的数据按顺序排列的表例如12x²+1x、-6666x²+457x可以抽象为ax²+bx 这就算同类型了/ 线性表有两种储存方式：顺序与链式顺序表类似于数组 优缺点一致链式表 可动态分配内存 方便插入删除 查找只能顺序遍历 顺序表用数组实现就行了 重点写一下链式表 链式表的示例 123456typedef struct Node *NewData //结构体定义指针 可以用NewData来指向下一个数据元素struct Node{ //自定义数据类型 看不懂的话再学一下上学期的c++ int a; //数据域 设置任意的同类型数据不同的地方 int b; //同 NewData link; //指针域 指向下一个数据节点}","categories":[],"tags":[],"author":"ryongwon"},{"title":"发癫","slug":"poem","date":"2023-03-04T18:23:36.000Z","updated":"2023-04-11T14:48:27.096Z","comments":true,"path":"2023/03/05/poem/","link":"","permalink":"http://example.com/2023/03/05/poem/","excerpt":"为赋新词强说愁","text":"为赋新词强说愁 前途光明我看不见 道路曲折我走不完 考得你昼夜把心血耗，考得你大好青春等闲拋。考得你不分苗和草，考得你手不能提来肩不能挑。考得你头发白牙齿全掉，考得你弓背又驼腰。年年考，月月考，活活考死你这命一条！","categories":[],"tags":[],"author":"ryongwon"},{"title":"test_img","slug":"test-img","date":"2023-03-04T12:27:47.000Z","updated":"2023-03-04T18:15:20.652Z","comments":true,"path":"2023/03/04/test-img/","link":"","permalink":"http://example.com/2023/03/04/test-img/","excerpt":"😅妈的这主题配置这么全上传不了照片？什么啥b操作","text":"😅妈的这主题配置这么全上传不了照片？什么啥b操作 错了哥 我是啥b","categories":[],"tags":[],"author":"ryongwon"},{"title":"markdown基础test","slug":"test","date":"2022-11-08T05:37:51.000Z","updated":"2023-03-15T16:26:36.316Z","comments":true,"path":"2022/11/08/test/","link":"","permalink":"http://example.com/2022/11/08/test/","excerpt":"测试一些没玩过的东西","text":"测试一些没玩过的东西 可莉不知道哦 自带的颜色不好使 一级标题？颗粒也不道啊三级四级别急别急正在玩插件 12345678#include &lt;stdio.h&gt;int main(){ printf(\"Hello World\"); return 0;} 图片插入MD的语法是酱紫的 1![没什么的文字输入](同文件夹下同名文件夹/文件名.jpg) markdown语法总结块内元素标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 引用 怎么和学妹说话啊 ————by f0 1&gt;怎么和学妹说话啊 ————by f0 代码块123456#include &lt;iostream&gt;using namespace std;int main(){ return 0} //```[编译语言] //``` 表格 姓名 性别 年龄 联系方式 11 45 14 后面忘了 123|姓名|性别|年龄|联系方式||:-|--:|:---:|:----:||11|45|14|后面忘了| 行内元素视频引用不支持但是url还能用 1&lt;iframe src=\"//player.bilibili.com/player.html?aid=971614142&amp;bvid=BV1Yp4y1p7n2&amp;cid=293544810&amp;page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"&gt; &lt;/iframe&gt; 外链新的网易云外链可以直接用css全部外链都能用","categories":[],"tags":[],"author":"ryongwon"},{"title":"Hello World","slug":"hello-world","date":"2022-11-07T03:12:08.010Z","updated":"2023-03-04T15:56:52.540Z","comments":true,"path":"2022/11/07/hello-world/","link":"","permalink":"http://example.com/2022/11/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 随笔好的 以上都没什么用在它自带的页面下写点感想 有一说一干活是真累啊，本来这个blog初始界面应该在昨天（2022.11.06）就应该做完的。但是！经典的但是转折！这个延迟跟上个世纪村里没有电报一般堪比邮递员送信的网络和只有一个txt文件却让你编出cpp的编译器一样的脑瘫配置。历经有效时间八个小时（大概的，真要说的话可能是六七个小时吧）终于配出来能看的blog页面…我一定要补充一个视频/blog来帮助后面的人碰见这些像派克叔叔做的苹果派一样糟糕的报错和无法进行…整个过程的逻辑性太重要了，治标不治本的解决错误方案只会让人再次遇见错误依然选择百度。参考许多视频和文档，但是文档的记述更让我云里雾里（突然理解了为什么学长学姐们不爱读文献，晦涩难懂的文字记录着未曾了解过的知识犹如对着三岁小孩告诉他任何一个函数如果可导就存在一个多项式可以无限的近似它）。希望能尽可能用白话文（？）和通俗易懂的语言让大家理解整个过程的逻辑链。 现在初始化设置了封面和页脚，但是没有搞懂如何去设置其它零碎部分，例如怎么去字体、怎么字体大小型号、改变字体颜色等等等等。学习之路漫漫其修远啊。建blog可能是来到赛博礼堂干的最应该的事之一了。 //这个文字体量是不是应该单开一篇页面写…一说起字数还有文章主题的字数统计和预估阅读时间没学，做blog也完全就是有样学样，跟着教程复制和粘贴，需要什么现学什么，如同我的pta作业一般。这让我十分佩服诺宝的博客，前后端都自己写，不愧是传说中的#code又好长得又高又帅家里有钱还可以润出去#的jn。 注释打的跟文章主体似的，整篇结构写的乱七八糟，而且还有很多长句。还请凑合看吧… ps：写这段随笔的时候很搞，大心康的一位哥们开麦打mc，乐死，这么一说可以试试搞一下mc服务器整个小服务器玩玩。哦靠我还没学会如何添加图片，应该附图一下。 在学 再学","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}],"author":"ryongwon"}],"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]}