{"meta":{"title":"龙渊","subtitle":"","description":"龙渊blog","author":"Ryongwon","url":"http://example.com","root":"/"},"pages":[{"title":"所有分类","date":"2022-11-07T06:45:10.038Z","updated":"2022-11-07T06:45:10.038Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-03-09T13:12:16.409Z","updated":"2023-03-09T13:12:16.409Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"#人类 #BUPT #信通 #22级 一个无趣且不解风情的人 总是会事与愿违"},{"title":"我的朋友们","date":"2023-04-18T16:25:04.078Z","updated":"2023-04-18T16:25:04.078Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"斗强圣者竟然在我身边！神集排名不分先后","text":"斗强圣者竟然在我身边！神集排名不分先后 “学数分放松”sarlren神！ “这也不是很难吧”纯真神！ “我是猛一”茯苓神！ “站在你面前的是 AI rank1！”折木太郎神！ “软工之神在此 谁敢造次！”Jungle神！ “集结清北之形 凝合Apple之力”LittleVanPlus神！ “一气化三清 信通任我行”Mccrena神！ “扼杀过去的我”violet神！ “绩点原神高手”ntdzyy神！","author":"ryongwon"},{"title":"所有标签","date":"2022-11-07T06:45:26.643Z","updated":"2022-11-07T06:45:26.643Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"python","slug":"python","date":"2023-05-14T16:04:31.000Z","updated":"2023-05-14T16:06:04.554Z","comments":true,"path":"2023/05/15/python/","link":"","permalink":"http://example.com/2023/05/15/python/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421# # Hello world# type_main =\"Hello world\"# print(type_main, type(type_main))# # 第一章# # 一、数据类型的转换# num1 = 233# num1_float = float(num1)# print(type(num1), num1, float(num1), type(num1_float))# num2 = 233.33# num3 = 233.66# print(int(num2), int(num3))# # 二、标识符# # 1.内容限定# test_1标识符中文 = 1# #只允许 中英文 数字 下划线 其中数字不能在首位# # 2.大小写敏感# Test_1标识符中文 = 2# print(test_1标识符中文, Test_1标识符中文)# # 3.关键词限制# # 三、运算符# # 加减乘除+-*/# # 整除 取余 指数# print(\"整除 10//3=\", 10//3)# print(\"取余 10%3=\", 10%3)# print(\"指数 10**3=\", 10**3)# # 复合赋值运算符# # 加减乘除、整除、取余、指数运算符# # a &amp;= b == a = a &amp; b# a = 3# b = 1# a += 1# b -= 1# print(\"加法赋值运算符a += b=\", a)# print(\"减法赋值运算符b -= 1:\", b)# # 四、字符串的拓展# # 字符串定义： 单、双、三引号定义 单双间可相互单层嵌套# morning = '早上好'# noon = \"中午好\"# night = \"\"\" 晚# 上# 好\"\"\"# # 转义字符\\ ：把后面符号转换成普通字符# # goodnight1 = \" \" 晚安 \"# goodnight1 = \" \\\"晚安 \"# # 字符串的拼接 +只能用字符串拼接# print(\"如果我再也见不到你 祝你\"+morning +noon +goodnight1)# # 字符串格式化# # 任何字面量都可以转化成字符串# # %占位符号 s(string)将变量转化成字符放入占位位置# # 格式化的作用：因为字符串的拼接只能用+ 而通过占位的格式化拼接更加简洁方便# 早午饭 = \"brunch\"# 晚饭 = \"dinner\"# print(\"早饭过了 准备吃 %s\" % 早午饭)# # 多个占位# print(\"早饭过了 准备吃 %s 之后吃 %s \" % (早午饭,晚饭))# # 多种数据类型的占位 常用的# # %s字符型 %d整型 %f浮点型# 钱包 = \"Pouch\"# cost = 10# balance = 0.1# print(\"今天花了 %d %s 还剩 %f 元\" % (cost,钱包,balance))# # 精度/宽度控制 % m.n s/d/f形式 string/decimal/float# # 多用于数字控制 对于字符串也有宽度控制作用# # 可以没有m整数部分 当m小于数字或字符串（应该也包括）整体时会被忽略# print(\"今天花了 %3.2d %s 还剩 %3.2f 元\" % (cost,钱包,balance) )# # 字符串的快速格式化fornat\"{ }\" 不限数据类型 不做精度限制 就放变量# print(f\"今天花了 {cost} {钱包} 还剩 {balance} 元\" )# # 表达式也可以被格式化# # 股价计算显示# name = \"明渊计划\"# stock_price = 5.01# stock_code = \"010043\"# stock_price_daily_gorwth_factor = 2.7# growth_days = 7# print(f\"公司：{name}，股票代码：{stock_code}，当前股价：{stock_price}\" )# print(\"每日增长系数：%.1f，经过%d天增长后，股价达到了：%.2f\" % (stock_price_daily_gorwth_factor,growth_days,stock_price+stock_price_daily_gorwth_factor*growth_days))# # 五、数据输入# # input的使用# print(\"您是？\")# use_name = input(\"请在下方写上你的名字\")# use_type = \"svip\"# print(f\"您好啊{use_name}，您是{use_type},欢迎您\")# # 第二章 # # 一、布尔类型和比较运算符# # 布尔类型的实质是由数字01形成的假真值 所以布尔类型也是数字型的一种# # 比较运算符就是做比较 我感觉像是就是判断对错 True就返回1 False就返回0# # 比较运算符：==、!=、&gt;、&lt;、&gt;=、&lt;=# bool1 = True# bool2 = False# print(\"bool1的数据类型为 %s,bool2的数据类型为 %s\" %(type(bool1),type(bool2)))# print(\"bool1 == bool2的结果为 %d\" % (bool1==bool2))# # 二、if判断语句# # 要点：冒号与缩进# if bool1 == bool2:# print(\"bool1等于bool2\")# if bool1 != bool2:# print(\"bool1不等于bool2\")# # 练习 成年人判断# age = int(input(\"请输入您的年龄\"))# if age &gt;= 18:# print(\"您已成年，游玩需要补票10元。\")# print(\"祝您游玩愉快\")# # 要点：如果不加int()的类型转换 则age默认为string型 会报错# if-else# age = int(input(\"请输入您的年龄\"))# if age &gt;= 18:# print(\"您已成年，游玩需要补票10元。\")# else:# print(\"您尚未成年，可以进入游乐园啦\")# print(\"祝您游玩愉快\")# # 练习 购票要求# print(\"欢迎来到游乐园\")# fare = 10# height_restirictions = 120# height = int(input(\"请输入您的身高(cm):\"))# if height &gt; 120:# print(f\"您的身高已超过{height_restirictions}cm，游玩需要购票{fare}\")# if-elif-else# elif height &gt; 0:# print(f\"您的身高未超出{height_restirictions}cm，可以免费游玩\")# else:# print(\"您是雅利安超人吗...\")# # if判断主打的就是一个互斥 先行满足后续不会被执行# # python支持在代码编写中直接使用输入变量 不用提前定义# # if int(input(\"请输入您的身高(cm):\")) &gt; 120:# # print(f\"您的身高已超过{height_restirictions}cm，游玩需要购票{fare}\")# # 判断条件的嵌套使用# vip_level = int(input(\"请问您的vip等级为：\"))# if vip_level&gt;3:# print(\"您在开玩笑吗...？\")# elif vip_level &gt;0:# print(\"您好亲爱的vip用户\")# if vip_level &gt;=2:# print(f\"您是尊贵的vip{vip_level}用户，此次门票免费\")# elif vip_level == 1:# print(f\"您是尊贵的vip{vip_level}用户,此次门票可以享受5折优惠\")# else:# print(\"请不要开玩笑了\")# # 练习 猜数字 完全可以用循环做...# import random# random_num =random.randint(1,10)# print(\"在1-10中随机生成了一个数字，您有三次猜数字的机会\")# guess_num1 = int(input(\"您觉得这个数字是多少：\"))# if guess_num1 == random_num:# print(\"您猜的数字就是随机数！牛哇\")# else:# if guess_num1 &lt; random_num:# print(\"您猜的数字小于随机数了\")# else:# print(\"您猜的数字大于随机数了\")# guess_num2 = int(input(\"您觉得这个数字是多少：\"))# if guess_num2 == random_num:# print(\"您猜的数字就是随机数！牛哇\")# else:# if guess_num2 &lt; random_num:# print(\"您猜的数字小于随机数了\")# else:# print(\"您猜的数字大于随机数了\")# guess_num3 = int(input(\"您觉得这个数字是多少：\"))# if guess_num3 == random_num:# print(\"您猜的数字就是随机数！牛哇\")# elif guess_num3 &lt; random_num:# print(\"您猜的数字小于随机数了\")# else:# print(\"您猜的数字大于随机数了\")# # 循环# # 避免死循环# # 将刚才的猜数字用while循环做# import random# random_num =random.randint(1,10)# i = 0# guess_num1 =0# print(\"在1-10中随机生成了一个数字，您有三次猜数字的机会\")# while i &lt; 3:# guess_num1 = int(input(\"您觉得这个数字是多少：\"))# if guess_num1 == random_num:# print(\"您猜的数字就是随机数！牛哇\")# break# elif guess_num1 &lt; random_num:# print(\"您猜的数字小于随机数了\")# elif guess_num1 &gt; random_num:# print(\"您猜的数字大于随机数了\")# i += 1# # 练习 一到一百的和# i = 1# sum = 0# while i &lt;= 100:# sum += i# i += 1# print(f\"1-100的和为{sum}\")# # tips1：制表符\\t == tab键# # tips2 print不换行使用print(\"\",end='')# #打印金字塔型九九乘法表# # 错误案例# i = 1 # 行# j = 1 # 列# while i &lt;= 9:# while j &lt;= i:# print(f\"{j}*{i}={i*j}\\t\",end='')# j += 1# i += 1# print()# # 分析：九九乘法表有两套循环 行循环和纵循环# # 上述这种情况事先定义j 但是忽略了每一行要重新从j=1开始# # 而这就是与正确的操作唯一的区别# # 可以事先定义 但是要记得调用# # 问题：应该是分析的不好 无法有效的想出两个循环应该怎么嵌套# # 正确案例# i = 1 # 行# while i &lt;= 9:# j = 1 # 列# while j &lt;= i:# print(f\"{j}*{i}={i*j}\\t\",end='')# j += 1# i += 1# print()# # 要点：双循环 \\t对其 end=''# # 每行都要从1开始打# # 每列都要逐渐增加# # 理不清时可以写一下一个一个的输入输出结果# # for循环# # for 临时变量 in 待处理数据集：# # 确定有限的循环适用# name = \"Ryongwon\"# for x in name:# print(x)# # 无法控制循环条件 循环次数取决于待处理集# # 练习 字符计数器# i = 0# sentence = \"itheima is a brand of itcast\"# letter = input(\"请属于您要计数的字符\\r\\n\")# print ()# for x in sentence:# if x == letter:# i += 1# print(f\"{sentence}中共含有：{i}个字符{letter}\")# # 换行输入\\r\\n \\r为回车符 \\n为换行符# # 转义字符# # \\ 续行符 到下一行显示# # \\' \\\" 之前讲过的转义# # \\0 空一下 \\n \\r 刚才提到了# # \\t 之前也说过 相当于tab# # \\a 响铃？ 不太懂# # \\b 退格backspa# # \\\\ 反斜线# # range语句# # for循环的本质是相当于遍历序列类型# # 数字序列range是一种简单的序列类型# for x in range(5):# print(x)# for x in range(1,10):# print(x,end=\"\")# print()# for x in range(1,10,2):# print(x,end=\"\")# # range(num)的包含的区间为[0,num)# # 如果num = 0则不显示# # range(num1,num2)的包含的区间为[num1,num2)# # 相当于上面的左端点可变# # range(num1,num2,step)的包含的区间为[num1,num1+step,num1+2*step,)# # 临时变量作用域# # 可以在for循环外访问到临时变量 但是不建议# for x in range(5):# x += 1# print(x)# # for循环的嵌套语句# # ep：for循环输出九九乘法表# for i in range(1,10):# for j in range(1,i+1):# if j &lt;= i:# print(f\"{j}*{i}={i * j}\\t\",end='')# print()# # 还是没有理清乘法表的本质# # 1*1=1 i*j=ij# # 2*1=2 2*2=4 (i+1)*j=ij+j (i+1)*(j+1)=ij+i+j+1# # ↑里层循环打印一行内容 到了第二行是列+1开始做# # for循环的continue与break# for i in range(1,10):# for j in range(1,i+1):# if j &lt;= i:# print(f\"{j}*{i}={i * j}\\t\",end='')# continue# print()# break# # 练习：发工资# import random# balance = 10000# for i in range(1,21):# # print(f\"钱包里有{balance}\")# gpa = random.randint(1,10)# if balance == 0:# print(\"本阶段工资发放完毕\")# break# if gpa &lt; 5:# print(f\"员工{i}，绩效分{gpa},低于5，不发工资，下一位\")# continue# else:# balance -= 1000# print(f\"向员工{i}发放工资1000元，账户余额还剩{balance}元\")","categories":[],"tags":[],"author":"ryongwon"},{"title":"数据结构与算法笔记","slug":"dsc","date":"2023-03-09T09:09:26.000Z","updated":"2023-03-22T16:16:09.474Z","comments":true,"path":"2023/03/09/dsc/","link":"","permalink":"http://example.com/2023/03/09/dsc/","excerpt":"教学视频是清华大学邓俊辉数据结构与算法浙江大学数据结构 陈越注意：信通院的计算机基础只有数据结构与算法导论 并非数据结构与算法 注意甄别在学习前 确保熟练掌握C/C++、Python、Java等某一主流语言使用或学习能力该笔记以C++为例才不是只学了C++结合徐雅静老师主编的《数据结构与算法》与邓俊辉老师主编的《数据结构》","text":"教学视频是清华大学邓俊辉数据结构与算法浙江大学数据结构 陈越注意：信通院的计算机基础只有数据结构与算法导论 并非数据结构与算法 注意甄别在学习前 确保熟练掌握C/C++、Python、Java等某一主流语言使用或学习能力该笔记以C++为例才不是只学了C++结合徐雅静老师主编的《数据结构与算法》与邓俊辉老师主编的《数据结构》 前言：为什么要学习数据结构和算法？引用runoob的一句话 随着应用程序变得越来越复杂和数据越来越丰富，几百万、几十亿甚至几百亿的数据就会出现，而对这么大对数据进行搜索、插入或者排序等的操作就越来越慢，数据结构就是用来解决这些问题的。 想象一所图书馆，无数的新书（数据）入馆，如何合理摆放（数据存储），同时需要和旧书（旧数据）一起陈列（优化数据结构），读者（计算机、用户）如何更快更方便的查找需要的书籍。老破旧损的书籍怎么处理。将它抽象化，就是数据结构和算法这门课程所教的知识。 但其实我觉得学校排的课有点不太合理，我个人更喜欢先学数据结构再去实践C语言编程。不过按刘老师的意思大概是先去知道这玩意操作起来是什么效果再去理解背后的原理。whatever，这门课程多又杂，笔记纯属是辅助我个人理解的，如有错误，请务必指出！！谢谢！！ 鸽了一阵 今天补一下 零、导论4节2.2 静态单链表1 一、绪论概念引入数据是信息的载体，能够被计算机识别、存储和加工处理。分为数值数据与非数值型数据。 数据元素是数据的基本单位。 数据项（字段、域）是构成数据元素的不可分割的最小单位。每个数据元素可以包含多个不同的数据项，每个数据项具有独立的含义。 数据类型是具有相同性质的计算机数据的集合以及在这个数据集合上的一组操作。数据类型可以分为简单类型(或称为原子类型)和构造类型（或称为结构类型）。例如C++中int、float、double等。 数据结构是指按照某种逻辑关系组织起来的一组数据,按一定的存储方式存储在计算机的存储器中，并在这些数据上定义了一组运算的集合。其中，数据结构包含以下三个方面： 数据元素之间的逻辑关系,也称为数据的逻辑结构。 数据元素及其关系在计算机存储器内的存储形式,称为数据的存储结构或物理结构。 对数据的操作或运算。 解释说明：数据元素存储在数据域中，数据类型是给数据分类，数据结构是阐释数据是如何摆放查找的的。 常见的逻辑结构有4 种，分别是集合、线性结构、树和图。 通过计算模型按照某种算法规律的进行过程称为计算 邓给出这样一个例子：欧几里得的尺规作图将线段三等分 过A作任意射线ρ，在ρ上取一点D，用圆规取AC’=C’D’=D’B’，连接B’B，过D’、C’作BB’的平行线，交AB于点C、D。此时AC=CD=DB。 将该过程描述成算法形式，即： 12345678tripartition(AB)输入：线段AB输出：将AB三等分的两个点C和D从A发出一条与AB不重合的射线ρ任取上三点C'、D'和B'，使|AC'| = |C'D'| = |D'B'|连接B'B过D'做B'B的平行线，交AB于D过C'做B'B的平行线，交AB于C 个人理解这个过程为 线段→尺规作图→三等分点。而尺规作图这个环节就是计算机计算的过程。作图步骤与规则即为算法。 在此给出算法定义：算法是指基于特定的计算模型，旨在解决某一信息处理问题而设计的一个指令序列。 算法具有 输入/输出 正确性 确定性 可行性 有穷性 其中有穷性是判别程序与算法的重要性质 算法的评价：正确（符合语法 支持简单、大量、一般性、合法的输入） 鲁棒（对非法输入辨别处理） 可读（结构化 注释） 效率（快 好） 例：冒泡算法（邓数据结构） 1234567891011121314void bubblesort1A(int A[], int n) { //冒泡排序算法：0 ≤ nbool sorted = false; //整体排序标志，首先假定尚未排序 while (!sorted) { //在尚未确定已全局排序之前，逐趟进行扫描交换 sorted = true; //假定已经排序 for (int i = 1; i &lt; n; i++) { //自左向右逐对检查当前范围A[0, n)内的各相邻元素 if (A[i - 1] &gt; A[i]) { //一旦A[i - 1]与A[i]逆序，则 swap(A[i - 1], A[i]); //交换 sorted = false; //因整体排序不能保证，需要清除排序标志 } } n--; //至此末元素必然就位，故可以缩短待排序序列的有效长度 }} //借助布尔型标志位sorted，可及时提前退出，而不致总是蛮力地做n - 1趟扫描交换 最好时间复杂度：T(n)=Ω(g(n))//增速下界最坏时间复杂度：T(n)=O(f(n))//增速上界平均时间复杂度：T(n)=Σnp//数学期望 一般来说最坏已经够用了 三种情况无太大差别 复杂度计算；多种算法同时使用时 复杂度取最大值即多种算法嵌套使用时 复杂度计算乘积即for循环时间复杂度等于循环次数乘以循环体代码复杂度即 i*o(f(n))if-else结构复杂度取决于 判断条件、分支的复杂度的最大值即 空间复杂度；程序运行时占用内存的大小S(n)=O(f(n)) 一、线性表定义：由同类型数据元素构成有序序列的线性结构/一类形似只需要换数或字符的数据按顺序排列的表例如12x²+1x、-6666x²+457x可以抽象为ax²+bx 这就算同类型了/ 线性表有两种储存方式：顺序与链式顺序表类似于数组 优缺点一致链式表 可动态分配内存 方便插入删除 查找只能顺序遍历 顺序表用数组实现就行了 重点写一下链式表 链式表的示例 123456typedef struct Node *NewData //结构体定义指针 可以用NewData来指向下一个数据元素struct Node{ //自定义数据类型 看不懂的话再学一下上学期的c++ int a; //数据域 设置任意的同类型数据不同的地方 int b; //同 NewData link; //指针域 指向下一个数据节点}","categories":[],"tags":[],"author":"ryongwon"},{"title":"发癫","slug":"poem","date":"2023-03-04T18:23:36.000Z","updated":"2023-04-11T14:48:27.096Z","comments":true,"path":"2023/03/05/poem/","link":"","permalink":"http://example.com/2023/03/05/poem/","excerpt":"为赋新词强说愁","text":"为赋新词强说愁 前途光明我看不见 道路曲折我走不完 考得你昼夜把心血耗，考得你大好青春等闲拋。考得你不分苗和草，考得你手不能提来肩不能挑。考得你头发白牙齿全掉，考得你弓背又驼腰。年年考，月月考，活活考死你这命一条！","categories":[],"tags":[],"author":"ryongwon"},{"title":"日记","slug":"diary","date":"2023-03-04T17:23:56.000Z","updated":"2023-04-19T16:36:52.469Z","comments":true,"path":"2023/03/05/diary/","link":"","permalink":"http://example.com/2023/03/05/diary/","excerpt":"逆天大舞台 没事你就来","text":"逆天大舞台 没事你就来 公元2023年Mar.肆2023年3月5日01点26分周末今天啥也没学大雾作业 五道题关于运动轨迹与运动方程知道运动方程就求导 知道速度方程就积分写了半个多小时数据结构的顺序表上课就写完了 哔哩哔哩大学自学一节课下周二交数学还没写 上节课的内容还没复习英语是一点也不想做 hexo上传图片的事想了半天-修改了主题页面图床链接 不再使用图床改为本地文件-markdown的语法储存 up up！-增加语法漏洞 rust有点意思 但是上学期学的c全忘了（或者说应该重新学了 tomatoes烂番茄的主题非常好 blog的前后端终极目标原了一会 护摩拉满了 纠缠39/70刷会抖音睡觉明天计划把volants文档 看一下级数的课 然后开摆！真的有点想玩智能车大赛 不过看起来难度超级大啊… 补：01点43分 打开抖音第一眼看见杨少凯发mm说让明天出去玩带着身份证What beautiful day😅😅😅 01点53分 好样的 GitHub二十分钟没连续连接超过五分钟一次也没传上去 谢谢你闭关锁国 趁此期间买了个域名 Ryongwon.top 等着后续看看有什么用 伍2023年3月5日23点21分打牌 什么也没学 力扣刷了两道题 严格回文数 n进制的转换与for循环tips是4在二进制下不是回文的。对于n≥5时(n−2)进制表示都是12直接pass最开始做的时候压根没想到 全部穷举了大概花了半个小时发现全部完蛋最后还是看的提示和答案简单题强度都这么高还要不要活了通过率90%是怎么做到的？ 然后又看见通过率只有56%的十进制回文数草 纯纯逆天 上学期的c++上机题最喜欢的一集 他甚至还给了负数的示例他真的 我哭死上学期做的时候面向示例了用的逆序数的方法花了五分钟但是这次给的范围是2^31-1到-2^31过了 但是没完全过这要还用逆序数算死也得超时了这回用的数组储存 先循环取余把每一位记录下来 123456while (i &lt; 256) { arr[i] = num % 10; i++; num /= 10; } 记完遍历两次数组对比每位就ok了 但是最开始真的以为这b题要2^32那么大的范围^^看来还在人类能够理解范围之内后来想想我cpu真有这么强的计算能力我早打游戏去了 Ryongwon.top的域名还没用上今天活下来已经很不容易了明天再说吧 陆2023年3月7日00点27分好消息好消息！！！学了！！！ 数据结构与算法绪论基础看完了但是看了一下xqmmcqs佬发现第二章讲的是线性表储存结构我大受震撼差不多得了 有空整理成学习笔记吧 学了大概小一个小时早上早八纯纯折磨这次导论是Sun老师强调了两节课电赛的重要性 周二的Liunx操作系统调到了周一午一哈哈 我太爱啦 至少明天不用早起 这也是我00点54分还能编辑blog的原因虽然午一也够逆天的睡了一会开始上操作系统 这Ubuntu怎么这么逆天 虽然大家都在吹吊打Windows感觉无论是用户体验还是程序运行都那么费劲呢( ﾟ∀。)7例如vi编辑的光标选择 删除字符 还有逆天的setting界面估计是因为一直在用Win习惯了看看在树莓派上能不能更好一点 英语 过 晚上尝了一下学一甜筒 ( ´ρ`)好吃 sukiapex了一会本来要写数学 发现明天交 遂 摆开摆后有哥们叫咱去拍月亮 一看正好二月十五 冲！相机三脚架齐了之后发现储存卡没带！！！！！！！！！！！！！！！！上次班会拍照忘记收起来了 用哥们的凑合一下吧… 翘完亲密关系心理学才发现点名了 寄！下节课只能跟f0一样人和电脑一起过去了 在此感谢一下纯真没想到这些聱牙佶屈（百度的）之文竟然会有人看谢谢您 好心人 他真的 我也哭死 ok了家人们 写完今天这篇应该够40树脂了 合完浓缩睡觉了01点18分今天美妙的小曲是 我叙说：悲哀 也是一本记事簿 ————阿多尼斯 柒不写了 打牌 捌打牌 玖噩耗 dsc导论的作业竟然要重写刚记完绪论的笔记准备学线性表告诉我不合格靠啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊内容是线性表建立释放插入删除这有啥问题啊 别太荒谬了 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include &lt;stdio.h&gt;;using namespace std;typedef int Emotion_index;typedef int ElemType;typedef struct{ ElemType *data; int size; int length;} SqList;bool InitList(SqList &amp;L, int s =10); bool InsList(SqList &amp;L, int i, const ElemType e); bool DelList(SqList &amp;L,int i); void DestroyList(SqList &amp;L); int main(){ SqList L; InitList(L,10); InsList(L, 5, 4); DelList(L, 5); DestroyList(L); return 0;}bool InitList(SqList &amp;L, int s) { if(s &lt;= 0) s = 10; L.data = new ElemType[s]; if(L.data == NULL) return false; L.size = s; L.length = 0;}bool InsList(SqList &amp;L, int i, const ElemType e) { if(i &lt; 1 || i &gt; L.length + 1) return false; if(L.size == L.length) { ElemType *temp = new ElemType[2*L.size]; if(temp ==NULL) return false; for(int i = 0; i &lt; L.length; i++) temp[i] = L.data[i]; delete[] L.data; L.data = temp; L.size = L.size * 2; } for(int k = L.length-1;k&gt;=i-1 ; k--) L.data[k+1] = L.data[k]; L.data[i-1] = e; L.length++; return true;}bool DelList(SqList &amp;L,int i){ int j; if(i&lt;1||i&gt;L.length) return false; for(j=i;j&lt;=L.length-1;j++) L.data[j-1]=L.data[j]; --L.length; return 0;}void DestroyList(SqList &amp;L){ delete [] L.data; L.data = NULL; L.size = 0; L.length = 0;} 拾打牌 看见脑残高中成人礼不如让我去死想想高中就觉得都挺傻逼的傻逼才回忆🤮哦 之前还不理解为什么神说不如自学因为老师总以为他说的东西你能理解😅dsc导论有感 拾壹 拾贰 拾叁对项目缺乏认知对程序缺乏理解对学习缺乏规划对目标缺乏动力对自己盲目自信对时间过度拖延唉b学 这都念不好不如死了算了麻薯不好吃 椒盐酥不好吃 不知道的点心 好吃记得交dsc作业 明天截止2023年3月13日22点57分 再说一嘴 朋友圈里怀念高中的全是傻逼 拾肆 拾伍一句话总结：全响应=零输入响应+零状态响应 通过分别分析从零开始的充放电相应完成对任意t时刻的分析👆全响应三要素等电分的期中考完看看成绩 好一点就摆了 差的话开个电分模电数电的坑… 习思这种b课既占用大好的上午时光 又没啥营养的课怎么还没取消呢😇中午吃完饭听听唱歌歇了会群里在压力 睡醒又在压力 吃完饭还在压力 还好我本身就是烂泥 咋压力都没用本来想说回来晚上打游戏感觉浪费时间 再想了一下真这么说不就成了学也没学成玩也没玩好的叠加态了吗群神在学一些我看不懂的知识 感觉都快变成压力日记了 时间过得好快 三月份转眼已经过半 这周开始要做实验了数据结构的笔记还没补 这周得回趟家以这个状态到底能学多少东西啊… 输入秘籍/remake 谢谢太郎纯真卡尔紫砂带我打派 看到了的话表达一下对你们的感谢小对不起室友一手… Pretty little liars. 拾陆 拾柒主打一个失败 主打一个emo怎么会这样捏 怎么能走错这么多路啊 放过我吧有时候知道以我的智力我这辈子也追不上神的脚步也知道完全不会过上自己想过的日子还知道不会和喜欢的人在一起不出力还哭喊 受罪是应该的吧十多年的吊车尾 从来没有一骑绝尘的光景但其实我也没多大理想 家里人朋友好好活着就可以了不过没什么才华我也只有学习这条出路吧（笑）就这样吧就是有点愧疚 对谁都挺愧疚的whatever 你说廉价 就是你对不过就这样吧远控也就只能写这么点没营养的内容了 我也不想 谁也不想 拾捌 拾玖我日 这电分怎么还有这么多不熟的明天恶补电分 休息完开学！ 廿 廿壹 廿贰我日 自己写程序算法如登天 还是撒了我吧本来今天想摆 发现纯真、太郎、PopHirasawa全更了遂写了一点数据结构的笔记你妈的 下午歇半天 六点吃饭吃到晚上都快八点半了 还是remake吧家人们 廿叁 廿肆 廿伍 廿陆 廿柒 廿捌 廿玖 叁拾 叁拾壹 Apr.壹 贰 叁 肆 伍 陆 柒 捌 玖 拾 拾壹 拾贰 拾叁 拾肆 拾伍 拾陆 拾柒 拾捌 拾玖很久没更日记了 确实是太忙了 你邮的考试周加上日常作业什么的确实压得人喘不过来气但是好在终于有一天能休息一下确实是值得记录的一天 难得今天过得这么舒服上午课翘了 发现虽然签到但是别人帮忙签了中午还了一点数学的债 不过确实还有七个小节要学下午看了一会视频和杨去吃饭 麻辣拌很香捏吃完饭一起跑跑步的时候碰见很多群u 聊一会天 学期运动-5km晚上爽爽洗澡放自己歌单一起听的时候看见自己歌被Ntdzyy收藏了许多 有种被认同的感觉虽然我现在也不太清楚应该管王同学叫什么网名九点跟heye佬一起打了一会r6 虽然说是消遣时间但确实还是需要一点认真的虽然第一把压力局但是赢了 虽然第二把唐了但是老哥很有意思“你肯定说谎了！我不喜欢说谎的队友！” 虽然第三把撞车刚才的老哥输了但是鲨爽了最后一个小时做了点多元函数的题 思路学到很多你看 每天总能有点能让你开心的事情不过回顾这一天确实学的太少了 期中确实给刚开学的自己当头一棒 给咱敲醒了被压力到把眼睛闭上开摆属实是不应该 需要重视回归课内 狠狠提升成绩 感觉不太对劲的时候可以跟heye聊聊天打打游戏 可以缓解一下情绪及时调整一下 千万不要顾头不顾尾最后两头都没顾上趁着心情不错留一句话给自己吧 尽吾志也而不能至者 可以无悔矣 希望以后自己能多学一点 希望以后自己能更强一点希望以后自己不会后悔一点希望以后更好一点 谢谢友链和群u的朋友们就这样吧晚安2023年4月20日00点30分 廿","categories":[],"tags":[],"author":"ryongwon"},{"title":"test_img","slug":"test-img","date":"2023-03-04T12:27:47.000Z","updated":"2023-03-04T18:15:20.652Z","comments":true,"path":"2023/03/04/test-img/","link":"","permalink":"http://example.com/2023/03/04/test-img/","excerpt":"😅妈的这主题配置这么全上传不了照片？什么啥b操作","text":"😅妈的这主题配置这么全上传不了照片？什么啥b操作 错了哥 我是啥b","categories":[],"tags":[],"author":"ryongwon"},{"title":"markdown基础test","slug":"test","date":"2022-11-08T05:37:51.000Z","updated":"2023-03-15T16:26:36.316Z","comments":true,"path":"2022/11/08/test/","link":"","permalink":"http://example.com/2022/11/08/test/","excerpt":"测试一些没玩过的东西","text":"测试一些没玩过的东西 可莉不知道哦 自带的颜色不好使 一级标题？颗粒也不道啊三级四级别急别急正在玩插件 12345678#include &lt;stdio.h&gt;int main(){ printf(\"Hello World\"); return 0;} 图片插入MD的语法是酱紫的 1![没什么的文字输入](同文件夹下同名文件夹/文件名.jpg) markdown语法总结块内元素标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 引用 怎么和学妹说话啊 ————by f0 1&gt;怎么和学妹说话啊 ————by f0 代码块123456#include &lt;iostream&gt;using namespace std;int main(){ return 0} //```[编译语言] //``` 表格 姓名 性别 年龄 联系方式 11 45 14 后面忘了 123|姓名|性别|年龄|联系方式||:-|--:|:---:|:----:||11|45|14|后面忘了| 行内元素视频引用不支持但是url还能用 1&lt;iframe src=\"//player.bilibili.com/player.html?aid=971614142&amp;bvid=BV1Yp4y1p7n2&amp;cid=293544810&amp;page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"&gt; &lt;/iframe&gt; 外链新的网易云外链可以直接用css全部外链都能用","categories":[],"tags":[],"author":"ryongwon"},{"title":"Hello World","slug":"hello-world","date":"2022-11-07T03:12:08.010Z","updated":"2023-03-04T15:56:52.540Z","comments":true,"path":"2022/11/07/hello-world/","link":"","permalink":"http://example.com/2022/11/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 随笔好的 以上都没什么用在它自带的页面下写点感想 有一说一干活是真累啊，本来这个blog初始界面应该在昨天（2022.11.06）就应该做完的。但是！经典的但是转折！这个延迟跟上个世纪村里没有电报一般堪比邮递员送信的网络和只有一个txt文件却让你编出cpp的编译器一样的脑瘫配置。历经有效时间八个小时（大概的，真要说的话可能是六七个小时吧）终于配出来能看的blog页面…我一定要补充一个视频/blog来帮助后面的人碰见这些像派克叔叔做的苹果派一样糟糕的报错和无法进行…整个过程的逻辑性太重要了，治标不治本的解决错误方案只会让人再次遇见错误依然选择百度。参考许多视频和文档，但是文档的记述更让我云里雾里（突然理解了为什么学长学姐们不爱读文献，晦涩难懂的文字记录着未曾了解过的知识犹如对着三岁小孩告诉他任何一个函数如果可导就存在一个多项式可以无限的近似它）。希望能尽可能用白话文（？）和通俗易懂的语言让大家理解整个过程的逻辑链。 现在初始化设置了封面和页脚，但是没有搞懂如何去设置其它零碎部分，例如怎么去字体、怎么字体大小型号、改变字体颜色等等等等。学习之路漫漫其修远啊。建blog可能是来到赛博礼堂干的最应该的事之一了。 //这个文字体量是不是应该单开一篇页面写…一说起字数还有文章主题的字数统计和预估阅读时间没学，做blog也完全就是有样学样，跟着教程复制和粘贴，需要什么现学什么，如同我的pta作业一般。这让我十分佩服诺宝的博客，前后端都自己写，不愧是传说中的#code又好长得又高又帅家里有钱还可以润出去#的jn。 注释打的跟文章主体似的，整篇结构写的乱七八糟，而且还有很多长句。还请凑合看吧… ps：写这段随笔的时候很搞，大心康的一位哥们开麦打mc，乐死，这么一说可以试试搞一下mc服务器整个小服务器玩玩。哦靠我还没学会如何添加图片，应该附图一下。 在学 再学","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}],"author":"ryongwon"}],"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]}